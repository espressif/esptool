VER_NO: 8f99219081b5ec5521595bf60ed8b331
EFUSES:
  WR_DIS                                : {show: y, blk : 0, word: 0, pos : 0, len : 32, start  : 0, type : 'uint:32', wr_dis: null, rd_dis: null, alt                            : '', dict             : '', desc: Disable programming of individual eFuses, rloc: EFUSE_RD_WR_DIS_REG, bloc: 'B0,B1,B2,B3'}
  RD_DIS                                : {show: y, blk : 0, word: 1, pos : 0, len  : 7, start : 32, type  : 'uint:7', wr_dis   : 0, rd_dis: null, alt                            : '', dict             : '', desc: Disable reading from BlOCK4-10, rloc: 'EFUSE_RD_REPEAT_DATA0_REG[6:0]', bloc: 'B4[6:0]'}
  RECOVERY_BOOTLOADER_FLASH_SECTOR_0_1  : {show: y, blk : 0, word: 1, pos : 7, len  : 2, start : 39, type  : 'uint:2', wr_dis: null, rd_dis: null, alt                            : '', dict             : '', desc: Represents the starting flash sector (flash sector size is 0x1000) of the recovery bootloader used by the ROM bootloader If the primary bootloader fails. 0 and 0xFFF - this feature is disabled, rloc: 'EFUSE_RD_REPEAT_DATA0_REG[8:7]', bloc: 'B4[7],B5[0]'}
  DIS_USB_JTAG                          : {show: y, blk : 0, word: 1, pos : 9, len  : 1, start : 41, type      : bool, wr_dis   : 2, rd_dis: null, alt                            : '', dict             : '', desc: Set this bit to disable function of usb switch to jtag in module of usb device, rloc: 'EFUSE_RD_REPEAT_DATA0_REG[9]', bloc: 'B5[1]'}
  RECOVERY_BOOTLOADER_FLASH_SECTOR_2_2  : {show: y, blk : 0, word: 1, pos: 10, len  : 1, start : 42, type      : bool, wr_dis: null, rd_dis: null, alt                            : '', dict             : '', desc: Represents the starting flash sector (flash sector size is 0x1000) of the recovery bootloader used by the ROM bootloader If the primary bootloader fails. 0 and 0xFFF - this feature is disabled, rloc: 'EFUSE_RD_REPEAT_DATA0_REG[10]', bloc: 'B5[2]'}
  DIS_USB_SERIAL_JTAG                   : {show: n, blk : 0, word: 1, pos: 11, len  : 1, start : 43, type      : bool, wr_dis   : 2, rd_dis: null, alt                            : '', dict             : '', desc: Set this bit to disable USB-Serial-JTAG, rloc: 'EFUSE_RD_REPEAT_DATA0_REG[11]', bloc: 'B5[3]'}
  DIS_FORCE_DOWNLOAD                    : {show: y, blk : 0, word: 1, pos: 12, len  : 1, start : 44, type      : bool, wr_dis   : 2, rd_dis: null, alt                            : '', dict             : '', desc: Set this bit to disable the function that forces chip into download mode, rloc: 'EFUSE_RD_REPEAT_DATA0_REG[12]', bloc: 'B5[4]'}
  SPI_DOWNLOAD_MSPI_DIS                 : {show: y, blk : 0, word: 1, pos: 13, len  : 1, start : 45, type      : bool, wr_dis   : 2, rd_dis: null, alt                            : '', dict             : '', desc: Set this bit to disable accessing MSPI flash/MSPI ram by SYS AXI matrix during boot_mode_download, rloc: 'EFUSE_RD_REPEAT_DATA0_REG[13]', bloc: 'B5[5]'}
  DIS_TWAI                              : {show: y, blk : 0, word: 1, pos: 14, len  : 1, start : 46, type      : bool, wr_dis   : 2, rd_dis: null, alt                            : '', dict             : '', desc: Set this bit to disable TWAI function, rloc: 'EFUSE_RD_REPEAT_DATA0_REG[14]', bloc: 'B5[6]'}
  JTAG_SEL_ENABLE                       : {show: y, blk : 0, word: 1, pos: 15, len  : 1, start : 47, type      : bool, wr_dis   : 2, rd_dis: null, alt                            : '', dict             : '', desc: Set this bit to enable selection between usb_to_jtag and pad_to_jtag through strapping gpio25 when both EFUSE_DIS_PAD_JTAG and EFUSE_DIS_USB_JTAG are equal to 0, rloc: 'EFUSE_RD_REPEAT_DATA0_REG[15]', bloc: 'B5[7]'}
  SOFT_DIS_JTAG                         : {show: y, blk : 0, word: 1, pos: 16, len  : 3, start : 48, type  : 'uint:3', wr_dis  : 31, rd_dis: null, alt                            : '', dict             : '', desc: Set odd bits to disable JTAG in the soft way. JTAG can be enabled in HMAC module, rloc: 'EFUSE_RD_REPEAT_DATA0_REG[18:16]', bloc: 'B6[2:0]'}
  DIS_PAD_JTAG                          : {show: y, blk : 0, word: 1, pos: 19, len  : 1, start : 51, type      : bool, wr_dis   : 2, rd_dis: null, alt                            : '', dict             : '', desc: Set this bit to disable JTAG in the hard way. JTAG is disabled permanently, rloc: 'EFUSE_RD_REPEAT_DATA0_REG[19]', bloc: 'B6[3]'}
  DIS_DOWNLOAD_MANUAL_ENCRYPT           : {show: y, blk : 0, word: 1, pos: 20, len  : 1, start : 52, type      : bool, wr_dis   : 2, rd_dis: null, alt                            : '', dict             : '', desc: Set this bit to disable flash manual encrypt function (except in SPI boot mode), rloc: 'EFUSE_RD_REPEAT_DATA0_REG[20]', bloc: 'B6[4]'}
  RECOVERY_BOOTLOADER_FLASH_SECTOR_3_6  : {show: y, blk : 0, word: 1, pos: 21, len  : 4, start : 53, type  : 'uint:4', wr_dis: null, rd_dis: null, alt                            : '', dict             : '', desc: Represents the starting flash sector (flash sector size is 0x1000) of the recovery bootloader used by the ROM bootloader If the primary bootloader fails. 0 and 0xFFF - this feature is disabled, rloc: 'EFUSE_RD_REPEAT_DATA0_REG[24:21]', bloc: 'B6[7:5],B7[0]'}
  USB_PHY_SEL                           : {show: y, blk : 0, word: 1, pos: 25, len  : 1, start : 57, type      : bool, wr_dis: null, rd_dis: null, alt                            : '', dict             : '', desc: '0: intphy(gpio24/25) <---> usb_device 1: intphy(26/27) <---> usb_otg11.1: intphy(gpio26/27) <---> usb_device 1: intphy(24/25) <---> usb_otg11', rloc: 'EFUSE_RD_REPEAT_DATA0_REG[25]', bloc: 'B7[1]'}
  HUK_GEN_STATE                         : {show: y, blk : 0, word: 1, pos: 26, len  : 5, start : 58, type  : 'uint:5', wr_dis  : 19, rd_dis: null, alt                            : '', dict             : '', desc: Set the bits to control validation of HUK generate mode. Odd of 1 is invalid; even of 1 is valid, rloc: 'EFUSE_RD_REPEAT_DATA0_REG[30:26]', bloc: 'B7[6:2]'}
  RECOVERY_BOOTLOADER_FLASH_SECTOR_7_7  : {show: y, blk : 0, word: 1, pos: 31, len  : 1, start : 63, type      : bool, wr_dis: null, rd_dis: null, alt                            : '', dict             : '', desc: Represents the starting flash sector (flash sector size is 0x1000) of the recovery bootloader used by the ROM bootloader If the primary bootloader fails. 0 and 0xFFF - this feature is disabled, rloc: 'EFUSE_RD_REPEAT_DATA0_REG[31]', bloc: 'B7[7]'}
  RECOVERY_BOOTLOADER_FLASH_SECTOR_8_10 : {show: y, blk : 0, word: 2, pos : 0, len  : 3, start : 64, type  : 'uint:3', wr_dis: null, rd_dis: null, alt                            : '', dict             : '', desc: Represents the starting flash sector (flash sector size is 0x1000) of the recovery bootloader used by the ROM bootloader If the primary bootloader fails. 0 and 0xFFF - this feature is disabled, rloc: 'EFUSE_RD_REPEAT_DATA1_REG[2:0]', bloc: 'B8[2:0]'}
  RECOVERY_BOOTLOADER_FLASH_SECTOR_11_11: {show: y, blk : 0, word: 2, pos : 3, len  : 1, start : 67, type      : bool, wr_dis: null, rd_dis: null, alt                            : '', dict             : '', desc: Represents the starting flash sector (flash sector size is 0x1000) of the recovery bootloader used by the ROM bootloader If the primary bootloader fails. 0 and 0xFFF - this feature is disabled, rloc: 'EFUSE_RD_REPEAT_DATA1_REG[3]', bloc: 'B8[3]'}
  KM_RND_SWITCH_CYCLE                   : {show: y, blk : 0, word: 2, pos : 4, len  : 1, start : 68, type      : bool, wr_dis   : 1, rd_dis: null, alt                            : '', dict             : '', desc: 'Set the bits to control key manager random number switch cycle. 0: control by register. 1: 8 km clk cycles. 2: 16 km cycles. 3: 32 km cycles', rloc: 'EFUSE_RD_REPEAT_DATA1_REG[4]', bloc: 'B8[4]'}
  KM_DEPLOY_ONLY_ONCE                   : {show: y, blk : 0, word: 2, pos : 5, len  : 4, start : 69, type  : 'uint:4', wr_dis   : 1, rd_dis: null, alt                            : '', dict             : '', desc: 'EFUSE_KM_DEPLOY_ONLY_ONCE and EFUSE_KM_DEPLOY_ONLY_ONCE_H together form one field: {EFUSE_KM_DEPLOY_ONLY_ONCE_H; EFUSE_KM_DEPLOY_ONLY_ONCE[3:0]}. Set each bit to control whether corresponding key can only be deployed once. 1 is true; 0 is false. bit 0: ecsda; bit 1: xts; bit2: hmac; bit3: ds; bit4:psram', rloc: 'EFUSE_RD_REPEAT_DATA1_REG[8:5]', bloc: 'B8[7:5],B9[0]'}
  FORCE_USE_KEY_MANAGER_KEY             : {show: y, blk : 0, word: 2, pos : 9, len  : 4, start : 73, type  : 'uint:4', wr_dis   : 1, rd_dis: null, alt                            : '', dict             : '', desc: 'EFUSE_FORCE_USE_KEY_MANAGER_KEY and EFUSE_FORCE_USE_KEY_MANAGER_KEY_H together form one field: {EFUSE_FORCE_USE_KEY_MANAGER_KEY_H; EFUSE_FORCE_USE_KEY_MANAGER_KEY[3:0]}. Set each bit to control whether corresponding key must come from key manager. 1 is true; 0 is false. bit 0: ecsda; bit 1: xts; bit2: hmac; bit3: ds; bit4:psram', rloc: 'EFUSE_RD_REPEAT_DATA1_REG[12:9]', bloc: 'B9[4:1]'}
  FORCE_DISABLE_SW_INIT_KEY             : {show: y, blk : 0, word: 2, pos: 13, len  : 1, start : 77, type      : bool, wr_dis   : 1, rd_dis: null, alt                            : '', dict             : '', desc: Set this bit to disable software written init key; and force use efuse_init_key, rloc: 'EFUSE_RD_REPEAT_DATA1_REG[13]', bloc: 'B9[5]'}
  KM_XTS_KEY_LENGTH_256                 : {show: y, blk : 0, word: 2, pos: 14, len  : 1, start : 78, type      : bool, wr_dis   : 1, rd_dis: null, alt                            : '', dict             : '', desc: Set this bit to config flash encryption xts-512 key; else use xts-256 key when using the key manager, rloc: 'EFUSE_RD_REPEAT_DATA1_REG[14]', bloc: 'B9[6]'}
  ECC_FORCE_CONST_TIME                  : {show: y, blk : 0, word: 2, pos: 15, len  : 1, start : 79, type      : bool, wr_dis  : 14, rd_dis: null, alt                            : '', dict             : '', desc: Set this bit to permanently turn on ECC const-time mode, rloc: 'EFUSE_RD_REPEAT_DATA1_REG[15]', bloc: 'B9[7]'}
  RESERVE_0_80                          : {show: n, blk : 0, word: 2, pos: 16, len  : 1, start : 80, type      : bool, wr_dis: null, rd_dis: null, alt                            : '', dict             : '', desc: Reserved; it was created by set_missed_fields_in_regs func, rloc: 'EFUSE_RD_REPEAT_DATA1_REG[16]', bloc: 'B10[0]'}
  WDT_DELAY_SEL                         : {show: y, blk : 0, word: 2, pos: 17, len  : 1, start : 81, type      : bool, wr_dis   : 2, rd_dis: null, alt                            : '', dict             : '', desc: Select lp wdt timeout threshold at startup = initial timeout value * (2 ^ (EFUSE_WDT_DELAY_SEL + 1)), rloc: 'EFUSE_RD_REPEAT_DATA1_REG[17]', bloc: 'B10[1]'}
  SPI_BOOT_CRYPT_CNT                    : {show: y, blk : 0, word: 2, pos: 18, len  : 3, start : 82, type  : 'uint:3', wr_dis   : 4, rd_dis: null, alt                            : '', dict: '{0: "Disable", 1: "Enable", 3: "Disable", 7: "Enable"}', desc: 'Set this bit to enable SPI boot encrypt/decrypt. Odd number of 1: enable. even number of 1: disable', rloc: 'EFUSE_RD_REPEAT_DATA1_REG[20:18]', bloc: 'B10[4:2]'}
  SECURE_BOOT_KEY_REVOKE0               : {show: y, blk : 0, word: 2, pos: 21, len  : 1, start : 85, type      : bool, wr_dis   : 5, rd_dis: null, alt                            : '', dict             : '', desc: Revoke 1st secure boot key, rloc: 'EFUSE_RD_REPEAT_DATA1_REG[21]', bloc: 'B10[5]'}
  SECURE_BOOT_KEY_REVOKE1               : {show: y, blk : 0, word: 2, pos: 22, len  : 1, start : 86, type      : bool, wr_dis   : 6, rd_dis: null, alt                            : '', dict             : '', desc: Revoke 2nd secure boot key, rloc: 'EFUSE_RD_REPEAT_DATA1_REG[22]', bloc: 'B10[6]'}
  SECURE_BOOT_KEY_REVOKE2               : {show: y, blk : 0, word: 2, pos: 23, len  : 1, start : 87, type      : bool, wr_dis   : 7, rd_dis: null, alt                            : '', dict             : '', desc: Revoke 3rd secure boot key, rloc: 'EFUSE_RD_REPEAT_DATA1_REG[23]', bloc: 'B10[7]'}
  KEY_PURPOSE_0                         : {show: y, blk : 0, word: 2, pos: 24, len  : 4, start : 88, type  : 'uint:4', wr_dis   : 8, rd_dis: null, alt                  : KEY0_PURPOSE, dict             : '', desc: Purpose of Key0, rloc: 'EFUSE_RD_REPEAT_DATA1_REG[27:24]', bloc: 'B11[3:0]'}
  KEY_PURPOSE_1                         : {show: y, blk : 0, word: 2, pos: 28, len  : 4, start : 92, type  : 'uint:4', wr_dis   : 9, rd_dis: null, alt                  : KEY1_PURPOSE, dict             : '', desc: Purpose of Key1, rloc: 'EFUSE_RD_REPEAT_DATA1_REG[31:28]', bloc: 'B11[7:4]'}
  KEY_PURPOSE_2                         : {show: y, blk : 0, word: 3, pos : 0, len  : 4, start : 96, type  : 'uint:4', wr_dis  : 10, rd_dis: null, alt                  : KEY2_PURPOSE, dict             : '', desc: Purpose of Key2, rloc: 'EFUSE_RD_REPEAT_DATA2_REG[3:0]', bloc: 'B12[3:0]'}
  KEY_PURPOSE_3                         : {show: y, blk : 0, word: 3, pos : 4, len  : 4, start: 100, type  : 'uint:4', wr_dis  : 11, rd_dis: null, alt                  : KEY3_PURPOSE, dict             : '', desc: Purpose of Key3, rloc: 'EFUSE_RD_REPEAT_DATA2_REG[7:4]', bloc: 'B12[7:4]'}
  KEY_PURPOSE_4                         : {show: y, blk : 0, word: 3, pos : 8, len  : 4, start: 104, type  : 'uint:4', wr_dis  : 12, rd_dis: null, alt                  : KEY4_PURPOSE, dict             : '', desc: Purpose of Key4, rloc: 'EFUSE_RD_REPEAT_DATA2_REG[11:8]', bloc: 'B13[3:0]'}
  KEY_PURPOSE_5                         : {show: y, blk : 0, word: 3, pos: 12, len  : 4, start: 108, type  : 'uint:4', wr_dis  : 13, rd_dis: null, alt                  : KEY5_PURPOSE, dict             : '', desc: Purpose of Key5, rloc: 'EFUSE_RD_REPEAT_DATA2_REG[15:12]', bloc: 'B13[7:4]'}
  SEC_DPA_LEVEL                         : {show: y, blk : 0, word: 3, pos: 16, len  : 2, start: 112, type  : 'uint:2', wr_dis  : 14, rd_dis: null, alt                            : '', dict             : '', desc: Configures the clock random divide mode to determine the dpa secure level, rloc: 'EFUSE_RD_REPEAT_DATA2_REG[17:16]', bloc: 'B14[1:0]'}
  RESERVE_0_114                         : {show: n, blk : 0, word: 3, pos: 18, len  : 1, start: 114, type      : bool, wr_dis: null, rd_dis: null, alt                            : '', dict             : '', desc: Reserved; it was created by set_missed_fields_in_regs func, rloc: 'EFUSE_RD_REPEAT_DATA2_REG[18]', bloc: 'B14[2]'}
  XTS_DPA_CLK_ENABLE                    : {show: y, blk : 0, word: 3, pos: 19, len  : 1, start: 115, type      : bool, wr_dis  : 14, rd_dis: null, alt                            : '', dict             : '', desc: Sets this bit to enable xts clock anti-dpa attack function, rloc: 'EFUSE_RD_REPEAT_DATA2_REG[19]', bloc: 'B14[3]'}
  SECURE_BOOT_EN                        : {show: y, blk : 0, word: 3, pos: 20, len  : 1, start: 116, type      : bool, wr_dis  : 15, rd_dis: null, alt                            : '', dict             : '', desc: Set this bit to enable secure boot, rloc: 'EFUSE_RD_REPEAT_DATA2_REG[20]', bloc: 'B14[4]'}
  SECURE_BOOT_AGGRESSIVE_REVOKE         : {show: y, blk : 0, word: 3, pos: 21, len  : 1, start: 117, type      : bool, wr_dis  : 16, rd_dis: null, alt                            : '', dict             : '', desc: Set this bit to enable revoking aggressive secure boot, rloc: 'EFUSE_RD_REPEAT_DATA2_REG[21]', bloc: 'B14[5]'}
  KM_DEPLOY_ONLY_ONCE_H                 : {show: y, blk : 0, word: 3, pos: 22, len  : 1, start: 118, type      : bool, wr_dis   : 1, rd_dis: null, alt                            : '', dict             : '', desc: 'EFUSE_KM_DEPLOY_ONLY_ONCE and EFUSE_KM_DEPLOY_ONLY_ONCE_H together form one field: {EFUSE_KM_DEPLOY_ONLY_ONCE_H; EFUSE_KM_DEPLOY_ONLY_ONCE[3:0]}. Set each bit to control whether corresponding key can only be deployed once. 1 is true; 0 is false. bit 0: ecsda; bit 1: xts; bit2: hmac; bit3: ds; bit4:psram', rloc: 'EFUSE_RD_REPEAT_DATA2_REG[22]', bloc: 'B14[6]'}
  FORCE_USE_KEY_MANAGER_KEY_H           : {show: y, blk : 0, word: 3, pos: 23, len  : 1, start: 119, type      : bool, wr_dis   : 1, rd_dis: null, alt                            : '', dict             : '', desc: 'EFUSE_FORCE_USE_KEY_MANAGER_KEY and EFUSE_FORCE_USE_KEY_MANAGER_KEY_H together form one field: {EFUSE_FORCE_USE_KEY_MANAGER_KEY_H; EFUSE_FORCE_USE_KEY_MANAGER_KEY[3:0]}. Set each bit to control whether corresponding key must come from key manager. 1 is true; 0 is false. bit 0: ecsda; bit 1: xts; bit2: hmac; bit3: ds; bit4:psram', rloc: 'EFUSE_RD_REPEAT_DATA2_REG[23]', bloc: 'B14[7]'}
  RESERVE_0_120                         : {show: n, blk : 0, word: 3, pos: 24, len  : 2, start: 120, type  : 'uint:2', wr_dis: null, rd_dis: null, alt                            : '', dict             : '', desc: Reserved; it was created by set_missed_fields_in_regs func, rloc: 'EFUSE_RD_REPEAT_DATA2_REG[25:24]', bloc: 'B15[1:0]'}
  FLASH_ECC_EN                          : {show: y, blk : 0, word: 3, pos: 26, len  : 1, start: 122, type      : bool, wr_dis  : 18, rd_dis: null, alt                            : '', dict             : '', desc: Set this bit to enable ECC for flash boot, rloc: 'EFUSE_RD_REPEAT_DATA2_REG[26]', bloc: 'B15[2]'}
  DIS_USB_OTG_DOWNLOAD_MODE             : {show: y, blk : 0, word: 3, pos: 27, len  : 1, start: 123, type      : bool, wr_dis  : 18, rd_dis: null, alt                            : '', dict             : '', desc: Set this bit to disable download via USB-OTG, rloc: 'EFUSE_RD_REPEAT_DATA2_REG[27]', bloc: 'B15[3]'}
  FLASH_TPUW                            : {show: y, blk : 0, word: 3, pos: 28, len  : 4, start: 124, type  : 'uint:4', wr_dis  : 18, rd_dis: null, alt                            : '', dict             : '', desc: Configures flash waiting time after power-up; in unit of ms. When the value less than 15; the waiting time is the configurable value. Otherwise; the waiting time is 30, rloc: 'EFUSE_RD_REPEAT_DATA2_REG[31:28]', bloc: 'B15[7:4]'}
  DIS_DOWNLOAD_MODE                     : {show: y, blk : 0, word: 4, pos : 0, len  : 1, start: 128, type      : bool, wr_dis  : 18, rd_dis: null, alt                            : '', dict             : '', desc: 'Set this bit to disable download mode (boot_mode[3:0] = 0; 1; 2; 4; 5; 6; 7)', rloc: 'EFUSE_RD_REPEAT_DATA3_REG[0]', bloc: 'B16[0]'}
  DIS_DIRECT_BOOT                       : {show: y, blk : 0, word: 4, pos : 1, len  : 1, start: 129, type      : bool, wr_dis  : 18, rd_dis: null, alt                            : '', dict             : '', desc: Set this bit to disable direct boot mode, rloc: 'EFUSE_RD_REPEAT_DATA3_REG[1]', bloc: 'B16[1]'}
  DIS_USB_SERIAL_JTAG_ROM_PRINT         : {show: y, blk : 0, word: 4, pos : 2, len  : 1, start: 130, type      : bool, wr_dis  : 18, rd_dis: null, alt                            : '', dict             : '', desc: Set this bit to disable USB-Serial-JTAG print during rom boot, rloc: 'EFUSE_RD_REPEAT_DATA3_REG[2]', bloc: 'B16[2]'}
  LOCK_KM_KEY                           : {show: y, blk : 0, word: 4, pos : 3, len  : 1, start: 131, type      : bool, wr_dis   : 1, rd_dis: null, alt                            : '', dict             : '', desc: set this bit to lock the key manager key after deploy, rloc: 'EFUSE_RD_REPEAT_DATA3_REG[3]', bloc: 'B16[3]'}
  DIS_USB_SERIAL_JTAG_DOWNLOAD_MODE     : {show: y, blk : 0, word: 4, pos : 4, len  : 1, start: 132, type      : bool, wr_dis  : 18, rd_dis: null, alt                            : '', dict             : '', desc: Set this bit to disable the USB-Serial-JTAG download function, rloc: 'EFUSE_RD_REPEAT_DATA3_REG[4]', bloc: 'B16[4]'}
  ENABLE_SECURITY_DOWNLOAD              : {show: y, blk : 0, word: 4, pos : 5, len  : 1, start: 133, type      : bool, wr_dis  : 18, rd_dis: null, alt                            : '', dict             : '', desc: Set this bit to enable security download mode, rloc: 'EFUSE_RD_REPEAT_DATA3_REG[5]', bloc: 'B16[5]'}
  UART_PRINT_CONTROL                    : {show: y, blk : 0, word: 4, pos : 6, len  : 2, start: 134, type  : 'uint:2', wr_dis  : 18, rd_dis: null, alt                            : '', dict             : '', desc: 'Set the type of UART printing; 00: force enable printing; 01: enable printing when GPIO8 is reset at low level; 10: enable printing when GPIO8 is reset at high level; 11: force disable printing', rloc: 'EFUSE_RD_REPEAT_DATA3_REG[7:6]', bloc: 'B16[7:6]'}
  FORCE_SEND_RESUME                     : {show: y, blk : 0, word: 4, pos : 8, len  : 1, start: 136, type      : bool, wr_dis  : 18, rd_dis: null, alt                            : '', dict             : '', desc: Set this bit to force ROM code to send a resume command during SPI boot, rloc: 'EFUSE_RD_REPEAT_DATA3_REG[8]', bloc: 'B17[0]'}
  SECURE_VERSION                        : {show: y, blk : 0, word: 4, pos : 9, len : 16, start: 137, type : 'uint:16', wr_dis  : 18, rd_dis: null, alt                            : '', dict             : '', desc: Secure version used by ESP-IDF anti-rollback feature, rloc: 'EFUSE_RD_REPEAT_DATA3_REG[24:9]', bloc: 'B17[7:1],B18,B19[0]'}
  SECURE_BOOT_DISABLE_FAST_WAKE         : {show: y, blk : 0, word: 4, pos: 25, len  : 1, start: 153, type      : bool, wr_dis  : 18, rd_dis: null, alt                            : '', dict             : '', desc: 'Represents whether secure boot do fast verification on wake is disabled. 0: enabled 1: disabled', rloc: 'EFUSE_RD_REPEAT_DATA3_REG[25]', bloc: 'B19[1]'}
  HYS_EN_PAD                            : {show: y, blk : 0, word: 4, pos: 26, len  : 1, start: 154, type      : bool, wr_dis   : 2, rd_dis: null, alt                            : '', dict             : '', desc: Set bits to enable hysteresis function of PAD0~27, rloc: 'EFUSE_RD_REPEAT_DATA3_REG[26]', bloc: 'B19[2]'}
  KEY_PURPOSE_0_H                       : {show: y, blk : 0, word: 4, pos: 27, len  : 1, start: 155, type      : bool, wr_dis   : 8, rd_dis: null, alt                            : '', dict             : '', desc: Purpose of Key0. The 5-th bit, rloc: 'EFUSE_RD_REPEAT_DATA3_REG[27]', bloc: 'B19[3]'}
  KEY_PURPOSE_1_H                       : {show: y, blk : 0, word: 4, pos: 28, len  : 1, start: 156, type      : bool, wr_dis   : 9, rd_dis: null, alt                            : '', dict             : '', desc: Purpose of Key1. The 5-th bit, rloc: 'EFUSE_RD_REPEAT_DATA3_REG[28]', bloc: 'B19[4]'}
  KEY_PURPOSE_2_H                       : {show: y, blk : 0, word: 4, pos: 29, len  : 1, start: 157, type      : bool, wr_dis  : 10, rd_dis: null, alt                            : '', dict             : '', desc: Purpose of Key2. The 5-th bit, rloc: 'EFUSE_RD_REPEAT_DATA3_REG[29]', bloc: 'B19[5]'}
  KEY_PURPOSE_3_H                       : {show: y, blk : 0, word: 4, pos: 30, len  : 1, start: 158, type      : bool, wr_dis  : 11, rd_dis: null, alt                            : '', dict             : '', desc: Purpose of Key3. The 5-th bit, rloc: 'EFUSE_RD_REPEAT_DATA3_REG[30]', bloc: 'B19[6]'}
  KEY_PURPOSE_4_H                       : {show: y, blk : 0, word: 4, pos: 31, len  : 1, start: 159, type      : bool, wr_dis  : 12, rd_dis: null, alt                            : '', dict             : '', desc: Purpose of Key4. The 5-th bit, rloc: 'EFUSE_RD_REPEAT_DATA3_REG[31]', bloc: 'B19[7]'}
  PXA0_TIEH_SEL_0                       : {show: y, blk : 0, word: 5, pos : 0, len  : 2, start: 160, type  : 'uint:2', wr_dis   : 2, rd_dis: null, alt                            : '', dict             : '', desc: 'Output LDO VO0 tieh source select. 0: 1''b1 1: sdmmc1 2: reg 3:sdmmc0', rloc: 'EFUSE_RD_REPEAT_DATA4_REG[1:0]', bloc: 'B20[1:0]'}
  PVT_GLITCH_EN                         : {show: y, blk : 0, word: 5, pos : 2, len  : 1, start: 162, type      : bool, wr_dis   : 3, rd_dis: null, alt                            : '', dict             : '', desc: 'Represents whether to enable PVT power glitch monitor function.1:Enable. 0:Disable', rloc: 'EFUSE_RD_REPEAT_DATA4_REG[2]', bloc: 'B20[2]'}
  RESERVE_0_163                         : {show: n, blk : 0, word: 5, pos : 3, len  : 1, start: 163, type      : bool, wr_dis: null, rd_dis: null, alt                            : '', dict             : '', desc: Reserved; it was created by set_missed_fields_in_regs func, rloc: 'EFUSE_RD_REPEAT_DATA4_REG[3]', bloc: 'B20[3]'}
  KEY_PURPOSE_5_H                       : {show: y, blk : 0, word: 5, pos : 4, len  : 1, start: 164, type      : bool, wr_dis  : 13, rd_dis: null, alt                            : '', dict             : '', desc: Purpose of Key5. The 5-th bit, rloc: 'EFUSE_RD_REPEAT_DATA4_REG[4]', bloc: 'B20[4]'}
  RESERVE_0_165                         : {show: n, blk : 0, word: 5, pos : 5, len  : 2, start: 165, type  : 'uint:2', wr_dis: null, rd_dis: null, alt                            : '', dict             : '', desc: Reserved; it was created by set_missed_fields_in_regs func, rloc: 'EFUSE_RD_REPEAT_DATA4_REG[6:5]', bloc: 'B20[6:5]'}
  KM_DISABLE_DEPLOY_MODE_H              : {show: y, blk : 0, word: 5, pos : 7, len  : 1, start: 167, type      : bool, wr_dis   : 1, rd_dis: null, alt                            : '', dict             : '', desc: 'EFUSE_KM_DISABLE_DEPLOY_MODE and EFUSE_KM_DISABLE_DEPLOY_MODE_H together form one field: {EFUSE_KM_DISABLE_DEPLOY_MODE_H; EFUSE_KM_DISABLE_DEPLOY_MODE[3:0]}. Set each bit to control whether corresponding key''s deploy mode of new value deployment is disabled. 1 is true; 0 is false. bit 0: ecsda; bit 1: xts; bit2: hmac; bit3: ds; bit4:psram', rloc: 'EFUSE_RD_REPEAT_DATA4_REG[7]', bloc: 'B20[7]'}
  KM_DISABLE_DEPLOY_MODE                : {show: y, blk : 0, word: 5, pos : 8, len  : 4, start: 168, type  : 'uint:4', wr_dis   : 1, rd_dis: null, alt                            : '', dict             : '', desc: 'EFUSE_KM_DISABLE_DEPLOY_MODE and EFUSE_KM_DISABLE_DEPLOY_MODE_H together form one field: {EFUSE_KM_DISABLE_DEPLOY_MODE_H; EFUSE_KM_DISABLE_DEPLOY_MODE[3:0]}. Set each bit to control whether corresponding key''s deploy mode of new value deployment is disabled. 1 is true; 0 is false. bit 0: ecsda; bit 1: xts; bit2: hmac; bit3: ds; bit4:psram', rloc: 'EFUSE_RD_REPEAT_DATA4_REG[11:8]', bloc: 'B21[3:0]'}
  RESERVE_0_172                         : {show: n, blk : 0, word: 5, pos: 12, len  : 4, start: 172, type  : 'uint:4', wr_dis: null, rd_dis: null, alt                            : '', dict             : '', desc: Reserved; it was created by set_missed_fields_in_regs func, rloc: 'EFUSE_RD_REPEAT_DATA4_REG[15:12]', bloc: 'B21[7:4]'}
  XTS_DPA_PSEUDO_LEVEL                  : {show: y, blk : 0, word: 5, pos: 16, len  : 2, start: 176, type  : 'uint:2', wr_dis  : 14, rd_dis: null, alt                            : '', dict             : '', desc: 'Sets this bit to control the xts pseudo-round anti-dpa attack function. 0: controlled by register. 1-3: the higher the value is; the more pseudo-rounds are inserted to the xts-aes calculation', rloc: 'EFUSE_RD_REPEAT_DATA4_REG[17:16]', bloc: 'B22[1:0]'}
  HP_PWR_SRC_SEL                        : {show: y, blk : 0, word: 5, pos: 18, len  : 1, start: 178, type      : bool, wr_dis  : 17, rd_dis: null, alt                            : '', dict             : '', desc: 'HP system power source select. 0:LDO  1: DCDC', rloc: 'EFUSE_RD_REPEAT_DATA4_REG[18]', bloc: 'B22[2]'}
  SECURE_BOOT_SHA384_EN                 : {show: y, blk : 0, word: 5, pos: 19, len  : 1, start: 179, type      : bool, wr_dis: null, rd_dis: null, alt                            : '', dict             : '', desc: 'Represents whether secure boot using SHA-384 is enabled. 0: disable 1: enable', rloc: 'EFUSE_RD_REPEAT_DATA4_REG[19]', bloc: 'B22[3]'}
  DIS_WDT                               : {show: y, blk : 0, word: 5, pos: 20, len  : 1, start: 180, type      : bool, wr_dis   : 2, rd_dis: null, alt                            : '', dict             : '', desc: Set this bit to disable watch dog, rloc: 'EFUSE_RD_REPEAT_DATA4_REG[20]', bloc: 'B22[4]'}
  DIS_SWD                               : {show: y, blk : 0, word: 5, pos: 21, len  : 1, start: 181, type      : bool, wr_dis   : 2, rd_dis: null, alt                            : '', dict             : '', desc: Set bit to disable super-watchdog, rloc: 'EFUSE_RD_REPEAT_DATA4_REG[21]', bloc: 'B22[5]'}
  PVT_GLITCH_MODE                       : {show: y, blk : 0, word: 5, pos: 22, len  : 2, start: 182, type  : 'uint:2', wr_dis   : 3, rd_dis: null, alt                            : '', dict             : '', desc: Use to configure glitch mode, rloc: 'EFUSE_RD_REPEAT_DATA4_REG[23:22]', bloc: 'B22[7:6]'}
  RESERVE_0_184                         : {show: n, blk : 0, word: 5, pos: 24, len  : 8, start: 184, type  : 'uint:8', wr_dis: null, rd_dis: null, alt                            : '', dict             : '', desc: Reserved; it was created by set_missed_fields_in_regs func, rloc: 'EFUSE_RD_REPEAT_DATA4_REG[31:24]', bloc: B23}
  MAC                                   : {show: y, blk : 1, word: 0, pos : 0, len : 48, start  : 0, type : 'bytes:6', wr_dis  : 20, rd_dis: null, alt                   : MAC_FACTORY, dict             : '', desc: MAC address, rloc: EFUSE_RD_MAC_SYS0_REG, bloc: 'B0,B1,B2,B3,B4,B5'}
  RESERVE_1_48                          : {show: n, blk : 1, word: 1, pos: 16, len : 16, start : 48, type : 'uint:16', wr_dis  : 20, rd_dis: null, alt                            : '', dict             : '', desc: Reserved; it was created by set_missed_fields_in_regs func, rloc: 'EFUSE_RD_MAC_SYS1_REG[31:16]', bloc: 'B6,B7'}
  WAFER_VERSION_MINOR                   : {show: y, blk : 1, word: 2, pos : 0, len  : 4, start : 64, type  : 'uint:4', wr_dis  : 20, rd_dis: null, alt                            : '', dict             : '', desc: Minor chip version, rloc: 'EFUSE_RD_MAC_SYS2_REG[3:0]', bloc: 'B8[3:0]'}
  WAFER_VERSION_MAJOR_LO                : {show: y, blk : 1, word: 2, pos : 4, len  : 2, start : 68, type  : 'uint:2', wr_dis  : 20, rd_dis: null, alt                            : '', dict             : '', desc: Major chip version (lower 2 bits), rloc: 'EFUSE_RD_MAC_SYS2_REG[5:4]', bloc: 'B8[5:4]'}
  DISABLE_WAFER_VERSION_MAJOR           : {show: y, blk : 1, word: 2, pos : 6, len  : 1, start : 70, type      : bool, wr_dis  : 20, rd_dis: null, alt                            : '', dict             : '', desc: Disables check of wafer version major, rloc: 'EFUSE_RD_MAC_SYS2_REG[6]', bloc: 'B8[6]'}
  DISABLE_BLK_VERSION_MAJOR             : {show: y, blk : 1, word: 2, pos : 7, len  : 1, start : 71, type      : bool, wr_dis  : 20, rd_dis: null, alt                            : '', dict             : '', desc: Disables check of blk version major, rloc: 'EFUSE_RD_MAC_SYS2_REG[7]', bloc: 'B8[7]'}
  BLK_VERSION_MINOR                     : {show: y, blk : 1, word: 2, pos : 8, len  : 3, start : 72, type  : 'uint:3', wr_dis  : 20, rd_dis: null, alt                            : '', dict             : '', desc: BLK_VERSION_MINOR of BLOCK2, rloc: 'EFUSE_RD_MAC_SYS2_REG[10:8]', bloc: 'B9[2:0]'}
  BLK_VERSION_MAJOR                     : {show: y, blk : 1, word: 2, pos: 11, len  : 2, start : 75, type  : 'uint:2', wr_dis  : 20, rd_dis: null, alt                            : '', dict             : '', desc: BLK_VERSION_MAJOR of BLOCK2, rloc: 'EFUSE_RD_MAC_SYS2_REG[12:11]', bloc: 'B9[4:3]'}
  PSRAM_CAP                             : {show: y, blk : 1, word: 2, pos: 13, len  : 3, start : 77, type  : 'uint:3', wr_dis  : 20, rd_dis: null, alt                            : '', dict             : '', desc: PSRAM capacity, rloc: 'EFUSE_RD_MAC_SYS2_REG[15:13]', bloc: 'B9[7:5]'}
  TEMP                                  : {show: y, blk : 1, word: 2, pos: 16, len  : 2, start : 80, type  : 'uint:2', wr_dis  : 20, rd_dis: null, alt                            : '', dict             : '', desc: Operating temperature of the ESP chip, rloc: 'EFUSE_RD_MAC_SYS2_REG[17:16]', bloc: 'B10[1:0]'}
  PSRAM_VENDOR                          : {show: y, blk : 1, word: 2, pos: 18, len  : 2, start : 82, type  : 'uint:2', wr_dis  : 20, rd_dis: null, alt                            : '', dict             : '', desc: PSRAM vendor, rloc: 'EFUSE_RD_MAC_SYS2_REG[19:18]', bloc: 'B10[3:2]'}
  PKG_VERSION                           : {show: y, blk : 1, word: 2, pos: 20, len  : 3, start : 84, type  : 'uint:3', wr_dis  : 20, rd_dis: null, alt                            : '', dict             : '', desc: Package version, rloc: 'EFUSE_RD_MAC_SYS2_REG[22:20]', bloc: 'B10[6:4]'}
  WAFER_VERSION_MAJOR_HI                : {show: y, blk : 1, word: 2, pos: 23, len  : 1, start : 87, type      : bool, wr_dis  : 20, rd_dis: null, alt                            : '', dict             : '', desc: Major chip version (MSB), rloc: 'EFUSE_RD_MAC_SYS2_REG[23]', bloc: 'B10[7]'}
  RESERVED_1_88                         : {show: n, blk : 1, word: 2, pos: 24, len  : 8, start : 88, type  : 'uint:8', wr_dis  : 20, rd_dis: null, alt                            : '', dict             : '', desc: reserved, rloc: 'EFUSE_RD_MAC_SYS2_REG[31:24]', bloc: B11}
  MAC_RESERVED_2                        : {show: n, blk : 1, word: 3, pos : 0, len : 18, start : 96, type : 'uint:18', wr_dis  : 20, rd_dis: null, alt                            : '', dict             : '', desc: Reserved, rloc: 'EFUSE_RD_MAC_SYS3_REG[17:0]', bloc: 'B12,B13,B14[1:0]'}
  SYS_DATA_PART0_0                      : {show: n, blk : 1, word: 3, pos: 18, len : 14, start: 114, type : 'uint:14', wr_dis  : 20, rd_dis: null, alt                            : '', dict             : '', desc: Represents the first 14-bit of zeroth part of system data, rloc: 'EFUSE_RD_MAC_SYS3_REG[31:18]', bloc: 'B14[7:2],B15'}
  SYS_DATA_PART0_1                      : {show: n, blk : 1, word: 4, pos : 0, len : 32, start: 128, type : 'uint:32', wr_dis  : 20, rd_dis: null, alt                            : '', dict             : '', desc: Represents the second 32-bit of zeroth part of system data, rloc: EFUSE_RD_MAC_SYS4_REG, bloc: 'B16,B17,B18,B19'}
  SYS_DATA_PART0_2                      : {show: n, blk : 1, word: 5, pos : 0, len : 32, start: 160, type : 'uint:32', wr_dis  : 20, rd_dis: null, alt                            : '', dict             : '', desc: Represents the third 32-bit of zeroth part of system data, rloc: EFUSE_RD_MAC_SYS5_REG, bloc: 'B20,B21,B22,B23'}
  OPTIONAL_UNIQUE_ID                    : {show: y, blk : 2, word: 0, pos : 0, len: 128, start  : 0, type: 'bytes:16', wr_dis  : 21, rd_dis: null, alt                            : '', dict             : '', desc: Optional unique 128-bit ID, rloc: EFUSE_RD_SYS_PART1_DATA0_REG, bloc: 'B0,B1,B2,B3,B4,B5,B6,B7,B8,B9,B10,B11,B12,B13,B14,B15'}
  SYS_DATA_PART1_4                      : {show: n, blk : 2, word: 4, pos : 0, len : 32, start: 128, type : 'uint:32', wr_dis  : 21, rd_dis: null, alt                            : '', dict             : '', desc: Represents the zeroth 32-bit of first part of system data, rloc: EFUSE_RD_SYS_PART1_DATA4_REG, bloc: 'B16,B17,B18,B19'}
  SYS_DATA_PART1_5                      : {show: n, blk : 2, word: 5, pos : 0, len : 32, start: 160, type : 'uint:32', wr_dis  : 21, rd_dis: null, alt                            : '', dict             : '', desc: Represents the zeroth 32-bit of first part of system data, rloc: EFUSE_RD_SYS_PART1_DATA5_REG, bloc: 'B20,B21,B22,B23'}
  SYS_DATA_PART1_6                      : {show: n, blk : 2, word: 6, pos : 0, len : 32, start: 192, type : 'uint:32', wr_dis  : 21, rd_dis: null, alt                            : '', dict             : '', desc: Represents the zeroth 32-bit of first part of system data, rloc: EFUSE_RD_SYS_PART1_DATA6_REG, bloc: 'B24,B25,B26,B27'}
  SYS_DATA_PART1_7                      : {show: n, blk : 2, word: 7, pos : 0, len : 32, start: 224, type : 'uint:32', wr_dis  : 21, rd_dis: null, alt                            : '', dict             : '', desc: Represents the zeroth 32-bit of first part of system data, rloc: EFUSE_RD_SYS_PART1_DATA7_REG, bloc: 'B28,B29,B30,B31'}
  BLOCK_USR_DATA                        : {show: y, blk : 3, word: 0, pos : 0, len: 192, start  : 0, type: 'bytes:24', wr_dis  : 22, rd_dis: null, alt                     : USER_DATA, dict             : '', desc: User data, rloc: EFUSE_RD_USR_DATA0_REG, bloc: 'B0,B1,B2,B3,B4,B5,B6,B7,B8,B9,B10,B11,B12,B13,B14,B15,B16,B17,B18,B19,B20,B21,B22,B23'}
  RESERVED_3_192                        : {show: n, blk : 3, word: 6, pos : 0, len  : 8, start: 192, type  : 'uint:8', wr_dis  : 22, rd_dis: null, alt                            : '', dict             : '', desc: reserved, rloc: 'EFUSE_RD_USR_DATA6_REG[7:0]', bloc: B24}
  CUSTOM_MAC                            : {show: y, blk : 3, word: 6, pos : 8, len : 48, start: 200, type : 'bytes:6', wr_dis  : 22, rd_dis: null, alt: MAC_CUSTOM USER_DATA_MAC_CUSTOM, dict             : '', desc: Custom MAC, rloc: 'EFUSE_RD_USR_DATA6_REG[31:8]', bloc: 'B25,B26,B27,B28,B29,B30'}
  RESERVED_3_248                        : {show: n, blk : 3, word: 7, pos: 24, len  : 8, start: 248, type  : 'uint:8', wr_dis  : 22, rd_dis: null, alt                            : '', dict             : '', desc: reserved, rloc: 'EFUSE_RD_USR_DATA7_REG[31:24]', bloc: B31}
  BLOCK_KEY0                            : {show: y, blk : 4, word: 0, pos : 0, len: 256, start  : 0, type: 'bytes:32', wr_dis  : 23, rd_dis   : 0, alt                          : KEY0, dict             : '', desc: Key0 or user data, rloc: EFUSE_RD_KEY0_DATA0_REG, bloc: 'B0,B1,B2,B3,B4,B5,B6,B7,B8,B9,B10,B11,B12,B13,B14,B15,B16,B17,B18,B19,B20,B21,B22,B23,B24,B25,B26,B27,B28,B29,B30,B31'}
  BLOCK_KEY1                            : {show: y, blk : 5, word: 0, pos : 0, len: 256, start  : 0, type: 'bytes:32', wr_dis  : 24, rd_dis   : 1, alt                          : KEY1, dict             : '', desc: Key1 or user data, rloc: EFUSE_RD_KEY1_DATA0_REG, bloc: 'B0,B1,B2,B3,B4,B5,B6,B7,B8,B9,B10,B11,B12,B13,B14,B15,B16,B17,B18,B19,B20,B21,B22,B23,B24,B25,B26,B27,B28,B29,B30,B31'}
  BLOCK_KEY2                            : {show: y, blk : 6, word: 0, pos : 0, len: 256, start  : 0, type: 'bytes:32', wr_dis  : 25, rd_dis   : 2, alt                          : KEY2, dict             : '', desc: Key2 or user data, rloc: EFUSE_RD_KEY2_DATA0_REG, bloc: 'B0,B1,B2,B3,B4,B5,B6,B7,B8,B9,B10,B11,B12,B13,B14,B15,B16,B17,B18,B19,B20,B21,B22,B23,B24,B25,B26,B27,B28,B29,B30,B31'}
  BLOCK_KEY3                            : {show: y, blk : 7, word: 0, pos : 0, len: 256, start  : 0, type: 'bytes:32', wr_dis  : 26, rd_dis   : 3, alt                          : KEY3, dict             : '', desc: Key3 or user data, rloc: EFUSE_RD_KEY3_DATA0_REG, bloc: 'B0,B1,B2,B3,B4,B5,B6,B7,B8,B9,B10,B11,B12,B13,B14,B15,B16,B17,B18,B19,B20,B21,B22,B23,B24,B25,B26,B27,B28,B29,B30,B31'}
  BLOCK_KEY4                            : {show: y, blk : 8, word: 0, pos : 0, len: 256, start  : 0, type: 'bytes:32', wr_dis  : 27, rd_dis   : 4, alt                          : KEY4, dict             : '', desc: Key4 or user data, rloc: EFUSE_RD_KEY4_DATA0_REG, bloc: 'B0,B1,B2,B3,B4,B5,B6,B7,B8,B9,B10,B11,B12,B13,B14,B15,B16,B17,B18,B19,B20,B21,B22,B23,B24,B25,B26,B27,B28,B29,B30,B31'}
  BLOCK_KEY5                            : {show: y, blk : 9, word: 0, pos : 0, len: 256, start  : 0, type: 'bytes:32', wr_dis  : 28, rd_dis   : 5, alt                          : KEY5, dict             : '', desc: Key5 or user data, rloc: EFUSE_RD_KEY5_DATA0_REG, bloc: 'B0,B1,B2,B3,B4,B5,B6,B7,B8,B9,B10,B11,B12,B13,B14,B15,B16,B17,B18,B19,B20,B21,B22,B23,B24,B25,B26,B27,B28,B29,B30,B31'}
  SYS_DATA_PART2_0                      : {show: n, blk: 10, word: 0, pos : 0, len : 32, start  : 0, type : 'uint:32', wr_dis  : 29, rd_dis   : 6, alt                            : '', dict             : '', desc: Represents the first 32-bit of second part of system data, rloc: EFUSE_RD_SYS_PART2_DATA0_REG, bloc: 'B0,B1,B2,B3'}
  SYS_DATA_PART2_1                      : {show: n, blk: 10, word: 1, pos : 0, len : 32, start : 32, type : 'uint:32', wr_dis  : 29, rd_dis   : 6, alt                            : '', dict             : '', desc: Represents the first 32-bit of second part of system data, rloc: EFUSE_RD_SYS_PART2_DATA1_REG, bloc: 'B4,B5,B6,B7'}
  SYS_DATA_PART2_2                      : {show: n, blk: 10, word: 2, pos : 0, len : 32, start : 64, type : 'uint:32', wr_dis  : 29, rd_dis   : 6, alt                            : '', dict             : '', desc: Represents the second 32-bit of second part of system data, rloc: EFUSE_RD_SYS_PART2_DATA2_REG, bloc: 'B8,B9,B10,B11'}
  SYS_DATA_PART2_3                      : {show: n, blk: 10, word: 3, pos : 0, len : 32, start : 96, type : 'uint:32', wr_dis  : 29, rd_dis   : 6, alt                            : '', dict             : '', desc: Represents the third 32-bit of second part of system data, rloc: EFUSE_RD_SYS_PART2_DATA3_REG, bloc: 'B12,B13,B14,B15'}
  SYS_DATA_PART2_4                      : {show: n, blk: 10, word: 4, pos : 0, len : 32, start: 128, type : 'uint:32', wr_dis  : 29, rd_dis   : 6, alt                            : '', dict             : '', desc: Represents the fourth 32-bit of second part of system data, rloc: EFUSE_RD_SYS_PART2_DATA4_REG, bloc: 'B16,B17,B18,B19'}
  SYS_DATA_PART2_5                      : {show: n, blk: 10, word: 5, pos : 0, len : 32, start: 160, type : 'uint:32', wr_dis  : 29, rd_dis   : 6, alt                            : '', dict             : '', desc: Represents the fifth 32-bit of second part of system data, rloc: EFUSE_RD_SYS_PART2_DATA5_REG, bloc: 'B20,B21,B22,B23'}
  PVT_LIMIT                             : {show: n, blk: 10, word: 6, pos : 0, len : 16, start: 192, type : 'uint:16', wr_dis  : 29, rd_dis   : 6, alt                            : '', dict             : '', desc: Power glitch monitor threthold, rloc: 'EFUSE_RD_SYS_PART2_DATA6_REG[15:0]', bloc: 'B24,B25'}
  PVT_PUMP_LIMIT                        : {show: n, blk: 10, word: 6, pos: 16, len  : 8, start: 208, type  : 'uint:8', wr_dis  : 29, rd_dis   : 6, alt                            : '', dict             : '', desc: Use to configure voltage monitor limit for charge pump, rloc: 'EFUSE_RD_SYS_PART2_DATA6_REG[23:16]', bloc: B26}
  PVT_CELL_SELECT                       : {show: n, blk: 10, word: 6, pos: 24, len  : 7, start: 216, type  : 'uint:7', wr_dis  : 29, rd_dis   : 6, alt                            : '', dict             : '', desc: Power glitch monitor PVT cell select, rloc: 'EFUSE_RD_SYS_PART2_DATA6_REG[30:24]', bloc: 'B27[6:0]'}
  RESERVE_10_223                        : {show: n, blk: 10, word: 6, pos: 31, len  : 1, start: 223, type      : bool, wr_dis  : 29, rd_dis   : 6, alt                            : '', dict             : '', desc: Reserved; it was created by set_missed_fields_in_regs func, rloc: 'EFUSE_RD_SYS_PART2_DATA6_REG[31]', bloc: 'B27[7]'}
  PUMP_DRV                              : {show: n, blk: 10, word: 7, pos : 0, len  : 4, start: 224, type  : 'uint:4', wr_dis  : 29, rd_dis   : 6, alt                            : '', dict             : '', desc: Use to configure charge pump voltage gain, rloc: 'EFUSE_RD_SYS_PART2_DATA7_REG[3:0]', bloc: 'B28[3:0]'}
  USB_DEVICE_EXCHG_PINS                 : {show: y, blk: 10, word: 7, pos : 4, len  : 1, start: 228, type      : bool, wr_dis  : 29, rd_dis   : 6, alt                            : '', dict             : '', desc: Enable usb device exchange pins of D+ and D-, rloc: 'EFUSE_RD_SYS_PART2_DATA7_REG[4]', bloc: 'B28[4]'}
  USB_OTG11_EXCHG_PINS                  : {show: y, blk: 10, word: 7, pos : 5, len  : 1, start: 229, type      : bool, wr_dis  : 29, rd_dis   : 6, alt                            : '', dict             : '', desc: Enable usb otg11 exchange pins of D+ and D-, rloc: 'EFUSE_RD_SYS_PART2_DATA7_REG[5]', bloc: 'B28[5]'}
  USB_DEVICE_DREFH                      : {show: n, blk: 10, word: 7, pos : 6, len  : 2, start: 230, type  : 'uint:2', wr_dis  : 29, rd_dis   : 6, alt                            : '', dict             : '', desc: usb intphy of usb device single-end input high threshold; 1.76V to 2V. step by 80mV, rloc: 'EFUSE_RD_SYS_PART2_DATA7_REG[7:6]', bloc: 'B28[7:6]'}
  USB_OTG11_DREFH                       : {show: n, blk: 10, word: 7, pos : 8, len  : 2, start: 232, type  : 'uint:2', wr_dis  : 29, rd_dis   : 6, alt                            : '', dict             : '', desc: usb intphy of usb otg11 single-end input high threshold; 1.76V to 2V. step by 80mV, rloc: 'EFUSE_RD_SYS_PART2_DATA7_REG[9:8]', bloc: 'B29[1:0]'}
  USB_DEVICE_DREFL                      : {show: n, blk: 10, word: 7, pos: 10, len  : 2, start: 234, type  : 'uint:2', wr_dis  : 29, rd_dis   : 6, alt                            : '', dict             : '', desc: usb intphy of usb device single-end input low threshold; 0.8V to 1.04V. step by 80mV, rloc: 'EFUSE_RD_SYS_PART2_DATA7_REG[11:10]', bloc: 'B29[3:2]'}
  USB_OTG11_DREFL                       : {show: n, blk: 10, word: 7, pos: 12, len  : 2, start: 236, type  : 'uint:2', wr_dis  : 29, rd_dis   : 6, alt                            : '', dict             : '', desc: usb intphy of usb otg11 single-end input low threshold; 0.8V to 1.04V. step by 80mV, rloc: 'EFUSE_RD_SYS_PART2_DATA7_REG[13:12]', bloc: 'B29[5:4]'}
  RESERVE_10_238                        : {show: n, blk: 10, word: 7, pos: 14, len : 18, start: 238, type : 'uint:18', wr_dis  : 29, rd_dis   : 6, alt                            : '', dict             : '', desc: Reserved; it was created by set_missed_fields_in_regs func, rloc: 'EFUSE_RD_SYS_PART2_DATA7_REG[31:14]', bloc: 'B29[7:6],B30,B31'}
